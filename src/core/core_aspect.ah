#ifndef __ACP__CORE_ASPECT_AH__
#define __ACP__CORE_ASPECT_AH__

#include "predefined_pointcuts.ah"

/**
 * \aspect CoreAspect
 * \file src/core/core_aspect.ah
 * \brief CoreAspect is the base aspect for all aspects in this ACP library.
 *
 * CoreAspect defines various pointcuts that are used throughout this library.
 * Some of them are virtual and can be overridden by derived aspects to structure the
 * implementation of the aspects. The others are meant to be useful pointcuts for a
 * more user oriented usage of the ACP library.
 */
aspect CoreAspect {

public:

	/**
	 * \pointcut where
	 * \brief A virtual placeholder for the pointcut that is used used in the main
	 * advice of each aspect.
	 *
	 * This pointcut is can be overridden by derived aspects if they want to change it
	 * form the default implementation.
	 * The default implementation is the default_where() pointcut.
	 */
	pointcut virtual where() = 0;

	/**
	 * \pointcut ignore
	 * \brief A virtual placeholder for the pointcut that describes which join points
	 * should be ignored by the aspect.
	 *
	 * It is recommended to use and extend a pointcut definition like with:
	 * "% <AspectName>::...::%(...)" || "% acp::...::%(...)"
	 */
	pointcut virtual ignore() = 0;

	CoreAspect() = default;
	virtual ~CoreAspect() {}

};

#endif // __ACP__CORE_ASPECT_AH__
